const webpack = require('webpack');
const { merge } = require('webpack-merge');
const path = require('path');
const HtmlWebpackPlugin = require('html-webpack-plugin');

const webpackConfig = require('./webpack.config');
const env = require('./environments/env.gcp');

const srcPublicPath = './src/public';
const distPath = `./dist/${env.ENVIRONMENT.app}`;

module.exports = merge(webpackConfig, {
	mode: env.ENVIRONMENT.node,
	output: {
		path: path.resolve(__dirname, distPath),
		publicPath: env.HOST.baseHref,
		filename: `[name].${env.ENVIRONMENT.app}.[contenthash].js`
	},
	devtool: 'source-map',
	plugins: [
		new HtmlWebpackPlugin({
			inject: 'body',
			xhtml: true,
			template: `${srcPublicPath}/index.html`,
			base: env.HOST.baseHref,
			title: env.APP.name,
			description: env.APP.description,
			minify: {
				caseSensitive: false,
				collapseBooleanAttributes: true,
				collapseInlineTagWhitespace: true,
				collapseWhitespace: true,
				conservativeCollapse: true,
				continueOnParseError: false,
				html5: true,
				includeAutoGeneratedTags: true,
				keepClosingSlash: false,
				minifyCSS: true,
				minifyJS: true,
				minifyURLs: true,
				noNewlinesBeforeTagClose: true,
				preserveLineBreaks: false,
				preventAttributesEscaping: false,
				quoteCharacter: "'",
				removeAttributeQuotes: true,
				removeComments: true,
				removeEmptyAttributes: false,
				removeEmptyElements: false,
				removeOptionalTags: false,
				removeRedundantAttributes: true,
				removeScriptTypeAttributes: false,
				removeStyleLinkTypeAttributes: false,
				removeTagWhitespace: true,
				sortAttributes: false,
				sortClassName: false,
				trimCustomFragments: false,
				useShortDoctype: true
			}
		}),
		new webpack.DefinePlugin({ env: JSON.stringify(env) }) //-- stringify to avoid parsing issues (e.g. {"ENVIRONMENT":{"app":local,"node":development},"HOST":{"baseHref":/},"APP":{"name":Owl (local)},"APP_STATE":{"counter":7}} )
	]
});
